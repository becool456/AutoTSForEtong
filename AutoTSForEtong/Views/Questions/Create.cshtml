@model AutoTSForETongModel.Question

@{
    ViewBag.Title = "添加新试题";
}

<h2>添加试题</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label for="categories">&nbsp;&nbsp;题型&nbsp;&nbsp;</label>
        @(Html.Kendo().DropDownList()
              .Name("QuestionTypeID")
              .HtmlAttributes(new { style = "width:300px" })
              .DataTextField("TypeName")
              .DataValueField("TypeID")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetAllQuestionType", "Questions");
                  });
              })
        )
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea id="Content" name="Content">@Model.Content</textarea>
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea id="Answer" name="Answer">@Model.Answer</textarea>
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Difficulty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label for="categories">&nbsp;&nbsp;科目&nbsp;&nbsp;</label>
            @(Html.Kendo().DropDownList()
              .Name("subjects")
              .HtmlAttributes(new { style = "width:300px" })

              .DataTextField("SubjectName")
              .DataValueField("SubjectID")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetAllSubjects", "Questions");
                  });
              })
            )
        </div>

        <div class="form-group">
            <label for="products">知识点</label>
            @(Html.Kendo().DropDownList()
              .Name("KnowledgeSiteID")
              .HtmlAttributes(new { style = "width:300px" })
              .DataTextField("KnowledgeSiteName")
              .DataValueField("KnowledgeSiteID")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetKnowlegeSites", "Questions")
                          .Data("filterProducts");
                  })
                  .ServerFiltering(true);
              })
              .Enable(false)
              .AutoBind(false)
              .CascadeFrom("subjects")
            )
            <div id="errormessage"></div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "Index")
</div>
<script>
            function filterProducts() {
                return {
                    subjects: $("#subjects").val()
                };
            }


</script>